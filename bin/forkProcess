#!/usr/bin/env node
const fse = require('fs-extra');
const terminate = require('terminate');
const { fork } = require('child_process');

// Process hosting the proc
let proc = null;

// run the `procIndex` in a forked process
const start = module.exports.start = function(src) {
  return new Promise((resolve, reject) => {
    fse.stat(src.abs, (err, stats) => {
      if (err)
        reject(src);

      if (proc) {
        stop().then(() => {
          proc = fork(src.abs);
          resolve(src);
        });
      } else {
        proc = fork(src.abs);
        resolve(src);
      }
    });
  });
}

// kill the forked process hosting the proc
const stop = module.exports.stop = function() {
  return new Promise((resolve, reject) => {
    if (proc)
      terminate(proc.pid);

    proc = null;
    resolve();
  });
}

// Kill proc on uncaughtException
process.on('uncaughtException', function (err) {
  console.error(`Uncaught Exception: ${err.code}`);
  console.error(err.stack);

  stop().then(() => process.exit());
});
